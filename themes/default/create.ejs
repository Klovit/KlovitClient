<!DOCTYPE html>
<html lang="en" class="dark" style="--vh: 6.53px;">

<%- include('./components/head') %>

<body x-data="" class="is-header-blur dark x-bind=" $store.global.documentBody">
  <!-- Page Wrapper -->
  <div id="root" class="min-h-100vh flex grow bg-zinc-900">
      <!-- Sidebar -->
<%- include('./components/sidebar') %>


    <!-- Main Content Wrapper -->
    <main class="main-content w-full pb-8">
      <h1 style="color: white; font-size: xx-large;">Deploy Server</h1>
      <p class="text-gray">Deploy your new server.</p>
       <% if (req.query.err) { %>
       <div style="border-radius: 15px; background-color: red; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="alert">
           <% if (req.query.err == "MISSINGVARIABLE") { %>
               You have not filled out all of the server information.
           <% } else if (req.query.err == "NOTANUMBER") { %>
               RAM, disk and CPU must be a number.
           <% } else if (req.query.err == "ERRORONCREATE") { %>
               An error was reported by the Panel while attempting to create the server.
           <% } else if (req.query.err == "BIGSERVERNAME") { %>
               Your server name must be less than <b>191</b> characters.
           <% } else if (req.query.err == "TOOMUCHSERVERS") { %>
               Too many servers!
           <% } else if (req.query.err == "PREMIUMLOCATION") { %>
               Please select a location.
           <% } else if (req.query.err == "TOOLITTLECOINS") { %>
               You do not have enough coins to create a server
           <% } else if (req.query.err == "MUSTCOMPLETECAPTCHA") { %>
               You must complete the captcha to prove you are human!
           <% } else if (req.query.err == "INVALIDCAPTCHARESPONSE") { %>
               You submitted an invalid captcha response, try again.
           <% } else { %>
               <% if (req.query.num) { %>
                   <% if (!isNaN(parseFloat(req.query.num))) { %>
                       <% if (req.query.err == "TOOLITTLERAM" || req.query.err == "TOOLITTLEDISK" || req.query.err == "TOOLITTLECPU") { %>
                           You must make a server with at least <b><%= req.query.num %></b>
                           <% if (req.query.err.slice(-3) == "RAM") { %>
                               MB RAM
                           <% } else if (req.query.err.slice(-4) == "DISK") { %>
                               MB disk
                           <% } else { // CPU %>
                               % CPU
                           <% } %>
                           if you want to create a server with the server type you have selected.
                       <% } else if (req.query.err == "TOOMUCHRAM" || req.query.err == "TOOMUCHDISK" || req.query.err == "TOOMUCHCPU") { %>
                           With the selected server type, you can have a maximum of <b><%= req.query.num %></b>
                           <% if (req.query.err.slice(-3) == "RAM") { %>
                               MB RAM
                           <% } else if (req.query.err.slice(-4) == "DISK") { %>
                               MB disk
                           <% } else { // CPU %>
                               % CPU
                           <% } %>
                           on the server.
                       <% } else if (req.query.err == "EXCEEDRAM" || req.query.err == "EXCEEDDISK" || req.query.err == "EXCEEDCPU") { %>
                           You don't have enough resources to make this server.
                       <% } else { %>
                           I won't mind to add a little easter egg here. :)
                       <% } %>
                   <% } else { %>
                       I won't mind to add a little easter egg here. :)
                   <% } %>
               <% } else { %>
                   I won't mind to add a little easter egg here. :)
               <% } %>
           <% } %>
       </div>
   <% } %>
<%- include('./components/status') %>
      <div class="mt-4 px-[var(--margin-x)]">
        <div class="flex flex-col items-center justify-between space-y-4 py-5 sm:flex-row sm:space-y-0 lg:py-6">
          <div class="flex items-center space-x-1">
            <h3 class="text-2xl font-semibold text-navy-100">
              Deploy servers
            </h3>
          </div>
          <div class="flex justify-center space-x-2">
            <button class="btn min-w-[7rem] font-medium text-white bg-zinc-800 hover:bg-zinc-700 active:bg-zinc-700/40">
              Cancel
            </button>
            <button onclick="submitNew()" class="btn min-w-[7rem] bg-primary font-medium text-white hover:bg-primary-focus focus:bg-primary-focus active:bg-primary-focus/90 dark:bg-accent dark:hover:bg-accent-focus dark:focus:bg-accent-focus dark:active:bg-accent/90">
              Create
            </button>
                <script>
      function submitNew() {
        let name = encodeURIComponent(document.getElementById("InputName").value);
        let egg = encodeURIComponent(document.getElementById("InputEgg").value);
        <% if (settings.resources.type == "GB") { %>
          let ram = encodeURIComponent(document.getElementById("InputRAM").value * 1024);
          let disk = encodeURIComponent(document.getElementById("InputDisk").value * 1024);
        <% } else { %>
          let ram = encodeURIComponent(document.getElementById("InputRAM").value);
          let disk = encodeURIComponent(document.getElementById("InputDisk").value);
        <% } %>
        let cpu = encodeURIComponent(document.getElementById("InputCPU").value * 100);
        let location = encodeURIComponent(document.getElementById("InputLoc").value);
        document.location.href = `/create?name=${name}&egg=${egg}&ram=${ram}&disk=${disk}&cpu=${cpu}&location=${location}`;
      };
    </script>
          </div>
        </div>
      </div>
      <div class="mt-4 px-[var(--margin-x)]">
        <div
        class="alert flex overflow-hidden rounded-lg bg-secondary/10 text-secondary dark:bg-secondary-light/15 dark:text-secondary-light"
      >
        <div class="w-1.5 bg-secondary"></div>
      </div>
        <div class="grid grid-cols-12 mt-4 gap-4 sm:gap-5 lg:gap-6">
          <div class="col-span-12 lg:col-span-8">
            <div class="bg-zinc-800/40 rounded-xl">
              <div class="tabs flex flex-col">
                <div class="tab-content p-4 sm:p-5">
                  <div class="space-y-5">
                    <label class="block">
                      <span class="font-medium text-slate-600 dark:text-navy-100">Server name</span>
                      <input class="mt-1.5 w-full rounded-xl ring-transparent border border-zinc-600 bg-transparent px-3 py-2 placeholder:text-slate-400 focus:border-zinc-700 overflow-hidden outline-none" placeholder="My server" id="InputName" type="text">
                    </label>
                    <label class="block">
                      <span class="font-medium text-slate-600 dark:text-navy-100">Resources</span>
                      <div class="grid grid-cols-2 lg:grid-cols-3 gap-4">
                        <input id="InputRAM" class="mt-1.5 w-full rounded-xl border border-zinc-600 bg-transparent px-3 py-2 placeholder:text-slate-400 focus:border-zinc-700 overflow-hidden outline-none" placeholder='Server RAM(<% if (settings.resources.type == "GB") { %>GBs<% } else { %>MBs<% } %>)' type="number">
                        <input id="InputCPU" class="mt-1.5 w-full rounded-xl border border-zinc-600 bg-transparent px-3 py-2 placeholder:text-slate-400 focus:border-zinc-700 overflow-hidden outline-none" placeholder="Server CPU" type="number">
                        <input id="InputDisk" class="mt-1.5 w-full rounded-xl border border-zinc-600 bg-transparent px-3 py-2 placeholder:text-slate-400 focus:border-zinc-700 overflow-hidden outline-none" placeholder='Server Disk(<% if (settings.resources.type == "GB") { %>GBs<% } else { %>MBs<% } %>)' type="number">
                      </div>
                    </label>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-span-12 lg:col-span-4">
            <div class="bg-zinc-800/40 rounded-xl space-y-5 p-4 sm:p-5">
              <label class="block">
                <span class="font-medium text-slate-600 dark:text-navy-100"> Select software</span>
                <select id="InputEgg" class="mt-1.5 w-full rounded-xl border border-zinc-600 bg-zinc-800 px-3 py-2 placeholder:text-slate-400 focus:border-zinc-700 overflow-hidden outline-none" placeholder="Select Software...">
                   <% for (let [name, value] of Object.entries(settings.api.client.eggs)) { %>
                          <option value="<%= name %>"><%= value.display %></option>
                        <% } %>
                </select>
              </label>
              <label class="block">
                <span class="font-medium text-slate-600 dark:text-navy-100">Select Location</span>
                <select id="InputLoc" class="mt-1.5 w-full rounded-xl border border-zinc-600 bg-zinc-800 px-3 py-2 placeholder:text-slate-400 focus:border-zinc-700 overflow-hidden outline-none" placeholder="Select Location...">
                 <% for (let [name, value] of Object.entries(settings.api.client.locations)) { %>
                          <option value="<%= name %>"><%= value.name %></option>
                        <% } %>
                </select>
              </label>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>
</body>
<script>
  window.addEventListener("DOMContentLoaded", () => Alpine.start());
</script>      <%- include('./components/footer') %>
</html>