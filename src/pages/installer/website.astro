---
import config from '../../config';

import db from '../../database';
import Footer from '../../components/footer.astro';
import NavigationMenuComponent from '@/components/installer/NavigationMenu';
import ErrorAlert from '@/components/ErrorAlert';
import { WebsiteForm } from '@/components/installer/WebsiteForm';

const { cookies, redirect } = Astro;

const installed = await db.get("installed")

if (installed === true) {
    return Astro.redirect(`/?error=KlovitClient is already installed.`)
}

const inputstarttoken = Astro.url.searchParams.get('token')! || '';
const starttoken = await db.get("starttoken")
if (inputstarttoken != starttoken) {
    return Astro.redirect("/installer/start?error=Invalid Token")
}

const year = new Date().getFullYear().toString()
const yearWithTitle = `${year} KlovitClient`
---
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content=`KlovitClient installer`>
        <meta name="keywords" content=`KlovitClient, Hosting, Klovit, Freemium Minecraft Hosting, Installer, Cloud, Minecraft, Servers, Free Servers, Hostings that use KlovitClient`>
        <meta name="author" content=`Klovit`>
        <meta name="copyright" content=`KlovitClient`>
        <meta property="og:type" content=`website`>
        <meta property="og:title" content=`KlovitClient`>
        <meta property="og:description" content=`KlovitClient installer`>
        <meta property="og:image" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <meta name="twitter:card" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <meta name="twitter:title" content=`KlovitClient`>
        <meta name="twitter:description" content=`KlovitClient installer`>
        <meta name="twitter:image" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <meta name="twitter:image:src" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <title>KlovitClient | Step 1</title>
      
        <script src="https://cdn.tailwindcss.com"></script>
        <link href=https://docs.klovit.tech/img/Klovit%20Logo.png rel="icon">
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
        <script src="https://kit.fontawesome.com/cf4342c927.js" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js"></script>
      </head>

      
      
      <body class="h-full min-h-screen relative">
          <div class="hidden md:block animation-blob h-screen w-screen">
              <div class="antialiased">
                  <main class="h-full">
                    <NavigationMenuComponent client:load />
                      <script is:inline>
                        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
                        if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                            document.documentElement.classList.add('dark');
                        } else {
                            document.documentElement.classList.remove('dark')
                        }
                        var themeToggleDarkIcona = document.getElementById('theme-toggle-dark-icona');
                      var themeToggleLightIcona = document.getElementById('theme-toggle-light-icona');
                      
                      // Change the icons inside the button based on previous settings
                      if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                          themeToggleLightIcona.classList.remove('hidden');
                      } else {
                          themeToggleDarkIcona.classList.remove('hidden');
                      }
                      
                      var themeToggleBtna = document.getElementById('theme-togglea');
                      
                      themeToggleBtna.addEventListener('click', function() {
                      
                          // toggle icons inside button
                          themeToggleDarkIcona.classList.toggle('hidden');
                          themeToggleLightIcona.classList.toggle('hidden');
                      
                          // if set via local storage previously
                          if (localStorage.getItem('color-theme')) {
                              if (localStorage.getItem('color-theme') === 'light') {
                                  document.documentElement.classList.add('dark');
                                  localStorage.setItem('color-theme', 'dark');
                              } else {
                                  document.documentElement.classList.remove('dark');
                                  localStorage.setItem('color-theme', 'light');
                              }
                      
                          // if NOT set via local storage previously
                          } else {
                              if (document.documentElement.classList.contains('dark')) {
                                  document.documentElement.classList.remove('dark');
                                  localStorage.setItem('color-theme', 'light');
                              } else {
                                  document.documentElement.classList.add('dark');
                                  localStorage.setItem('color-theme', 'dark');
                              }
                          }
                          
                      });
                      </script>
                        <ErrorAlert client:load />

                        <section class="min-h-screen">
                            <div class="flex items-center justify-center m-2">
                                <div class="relative border mt-2 mb-4 border-gray-600 shadow-lg p-8 rounded-lg max-w-md w-full">
                                  <WebsiteForm client:load />
                                </div>
                              </div>
                        </section>
      <Footer />
                      </div>
                  </main>
              </div>
          </div>
          <div class="md:hidden overflow-x-hidden h-screen w-screen">
              <div class="antialiased">
                  <main class="h-full">
<NavigationMenuComponent client:load />
<ErrorAlert client:load />

<section class="min-h-screen">
    <div class="flex items-center justify-center m-2">
        <div class="relative border mt-2 mb-4 mr-2 border-gray-600 shadow-lg p-8 rounded-lg max-w-md w-full">
          <WebsiteForm client:load />
        </div>
      </div>
</section>
                          <Footer />
                      </div>
                  </main>
              </div>
          </div>
      </body>
      
      </html>