---
import config from '../../config';

import db from '../../database';
import Footer from '../../components/footer.astro';
const { cookies, redirect } = Astro;

const installed = await db.get("installed")

if (installed === true) {
    return Astro.redirect(`/?error=KlovitClient is already installed.`)
}

const inputstarttoken = Astro.url.searchParams.get('token')! || '';
const starttoken = await db.get("starttoken")
if (inputstarttoken != starttoken) {
    return Astro.redirect("/installer/start?error=Invalid Token")
}
const error = Astro.url.searchParams.get('error')! || '';

const year = new Date().getFullYear().toString()
const yearWithTitle = `${year} KlovitClient`

const config_website = await db.get("config_website")
const restype = config_website.resource_type
let ramph;
let diskph;
let cpuph;
let slotph;
if (restype === "GB") {
    ramph = `1 GB`
    diskph = `2 GB`
    cpuph = `1 Core`
    slotph = `1 Slot`
} else {
    ramph = `1024 MB`
    diskph = `2048 MB`
    cpuph = `100%`
    slotph = `1 slot`
}

const config_currency = await db.get("config_currency") || {};
const giftingvalue = config_currency.gifting?.enabled ?? '';
const coinsvalue = config_currency.coins?.enabled ?? '';
const earningvalue = config_currency.coins?.earn?.enabled ?? '';
const atglinksvalue = config_currency.coins?.earn?.atglinks?.enabled ?? '';
const atglinksapivaule = config_currency.coins?.earn?.atglinks?.api ?? '';
const atglinksdailyvalue = config_currency.coins?.earn?.atglinks?.dailylimit ?? '';
const atglinksminimumtimevalue = config_currency.coins?.earn?.atglinks?.dailylimit ?? '';
const storevalue = config_currency.coins?.store?.enabled ?? '';
const rampricevalue = config_currency.coins?.store?.ram?.cost ?? '';
const rampervalue = config_currency.coins?.store?.ram?.per ?? '';
const diskpricevault = config_currency.coins?.store?.disk?.cost ?? '';
const diskpervaule = config_currency.coins?.store?.disk?.per ?? '';
const cpupricevalue = config_currency.coins?.store?.cpu?.cost ?? '';
const cpupervalue = config_currency.coins?.store?.cpu?.per ?? '';
const slotspricevalue = config_currency.coins?.store?.slots?.cost ?? '';
const slotspervalue = config_currency.coins?.store?.slots?.per ?? '';
---
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content=`KlovitClient installer`>
        <meta name="keywords" content=`KlovitClient, Hosting, Klovit, Freemium Minecraft Hosting, Installer, Cloud, Minecraft, Servers, Free Servers, Hostings that use KlovitClient`>
        <meta name="author" content=`Klovit`>
        <meta name="copyright" content=`KlovitClient`>
        <meta property="og:type" content=`website`>
        <meta property="og:title" content=`KlovitClient`>
        <meta property="og:description" content=`KlovitClient installer`>
        <meta property="og:image" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <meta name="twitter:card" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <meta name="twitter:title" content=`KlovitClient`>
        <meta name="twitter:description" content=`KlovitClient installer`>
        <meta name="twitter:image" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <meta name="twitter:image:src" content=`https://docs.klovit.tech/img/Klovit%20Logo.png`>
        <title>KlovitClient | Step 3</title>
      
        <script src="https://cdn.tailwindcss.com"></script>
        <link href=https://docs.klovit.tech/img/Klovit%20Logo.png rel="icon">
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
        <script src="https://kit.fontawesome.com/cf4342c927.js" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js"></script>
      </head>
      
      <body class="h-full min-h-screen relative">
          <div class="hidden md:block animation-blob h-screen w-screen">
              <div class="antialiased">
                  <main class="h-full">
                      <div class="absolute h-12 w-full z-10 bg-[#6473e1] dark:bg-[#10143c] grid grid-cols-2">
                          <div><img class="mt-2 ml-4" src="https://docs.klovit.tech/img/Klovit%20Logo.png" height="30px" width="40px" alt="icon"></img></div>
                         <div class="grid place-items-end"><button aria-label="theme-switcher" id="theme-toggleb" type="button" class="text-white dark:text-white rounded-lg aligh-right text-sm p-2.5">
                            <svg id="theme-toggle-dark-iconb" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                              <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                            </svg>
                            <svg id="theme-toggle-light-iconb" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                              <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
                            </svg>
                          </button></div>
                      </div>
                         <script is:inline>
      
                          // On page load or when changing themes, best to add inline in `head` to avoid FOUC
                          if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                              document.documentElement.classList.add('dark');
                          } else {
                              document.documentElement.classList.remove('dark')
                          }
                          var themeToggleDarkIconb = document.getElementById('theme-toggle-dark-iconb');
                          var themeToggleLightIconb = document.getElementById('theme-toggle-light-iconb');
                        
                          // Change the icons inside the button based on previous settings
                          if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                              themeToggleLightIconb.classList.remove('hidden');
                          } else {
                              themeToggleDarkIconb.classList.remove('hidden');
                          }
                          
                          var themeToggleBtnb = document.getElementById('theme-toggleb');
                          
                          themeToggleBtnb.addEventListener('click', function() {
                          
                            // toggle icons inside button
                            themeToggleDarkIconb.classList.toggle('hidden');
                            themeToggleLightIconb.classList.toggle('hidden');
                          
                            // if set via local storage previously
                            if (localStorage.getItem('color-theme')) {
                                if (localStorage.getItem('color-theme') === 'light') {
                                    document.documentElement.classList.add('dark');
                                    localStorage.setItem('color-theme', 'dark');
                                } else {
                                    document.documentElement.classList.remove('dark');
                                    localStorage.setItem('color-theme', 'light');
                                }
                          
                            // if NOT set via local storage previously
                            } else {
                                if (document.documentElement.classList.contains('dark')) {
                                    document.documentElement.classList.remove('dark');
                                    localStorage.setItem('color-theme', 'light');
                                } else {
                                    document.documentElement.classList.add('dark');
                                    localStorage.setItem('color-theme', 'dark');
                                }
                            }
                            
                          });
                          // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes
                          if (
                              localStorage.getItem('color-theme') === 'dark' ||
                              (!('color-theme' in localStorage) &&
                                window.matchMedia('(prefers-color-scheme: dark)').matches)
                            ) {
                              document.documentElement.classList.add('dark');
                            } else {
                              document.documentElement.classList.remove('dark');
                            }
                        </script>
                        {error &&
                        <div class="flex justify-center">
                        <div class="absolute mt-14 bg-[#6473e1] dark:bg-[#10143c] w-fit z-10">
                            <div class="p-4 rounded-xl bg-red-700 text-white self-center mr-6 ml-4">
                                ERROR: {error}
                            </div>
                        </div>
                        </div>}

<section class="min-h-screen">
    <!-- Container for top colored section -->
    <div class="grid min-h-screen min-w-screen grid-cols-1 grid-rows-2">
        <!-- Top colored section -->
        <div class="bg-[#6473e1] dark:bg-[#10143c] p-8">
        </div>

        <!-- Centered box that overlaps the top section -->
        <div class="absolute bg-white h-[350px] min-w-fit dark:bg-[#181c44] overflow-y-scroll shadow-lg p-8 ml-[410px] mt-18 self-center rounded-xl z-10">
            <form class="grid grid-cols-1" action="/api/installer/currency" method="POST">
                <input type="hidden" value={inputstarttoken} name="inputtoken"> 
                <h1 class="text-black text-center dark:text-white text-2xl font-bold">Step 3 - Currency and Store</h2>
                <h1 class="text-black text-center dark:text-white text-xl font-bold">Virtual Currency</h2>
                <div class="w-full grid grid-cols-2 mb-1">
                    <h1 class="text-black dark:text-white ml-1">Enable Gifiting (Resources and Coins):&nbsp; </h1>
                    {giftingvalue ? <input name="gifting" checked type="checkbox" value="true" class="w-5 h-5 appearance-none border cursor-pointer border-black  rounded-md mr-2 hover:border-indigo-500 hover:bg-indigo-100 checked:bg-no-repeat checked:bg-center checked:bg-[#6473e1] dark:checked:bg-[#10143c]"> : <input name="gifting" type="checkbox" value="true" class="w-5 h-5 appearance-none border cursor-pointer border-gray-800  rounded-md mr-2 hover:border-indigo-500 hover:bg-indigo-100 checked:bg-no-repeat checked:bg-center checked:bg-[#6473e1] dark:checked:bg-[#10143c]"> }
                    <span class="checkmark"></span>
                </div>

                <h2 class="text-black text-center dark:text-white text-xl font-bold">Payment Settings</h2>
                <div class="w-full grid grid-cols-2 mb-1">
                    <h1 class="text-black dark:text-white ml-1">Enable Virtual Currency: </h1>
                    {coinsvalue ? <input name="coins" checked type="checkbox" value="true" class="w-5 h-5 appearance-none border cursor-pointer border-gray-800  rounded-md mr-2 hover:border-indigo-500 hover:bg-indigo-100 checked:bg-no-repeat checked:bg-center checked:bg-[#6473e1] dark:checked:bg-[#10143c]"> : <input name="coins" type="checkbox" value="true" class="w-5 h-5 appearance-none border cursor-pointer border-gray-800  rounded-md mr-2 hover:border-indigo-500 hover:bg-indigo-100 checked:bg-no-repeat checked:bg-center checked:bg-[#6473e1] dark:checked:bg-[#10143c]"> }
                    <span class="checkmark"></span>
                </div>
                <input hidden type="text" name="token" class="text-white placeholder-gray-300 rounded-xl p-2 bg-[#6473e1] dark:bg-[#10143c]" required value={inputstarttoken}>
                <button type="submit" class="mt-2 bg-[#6473e1] dark:bg-[#10143c] p-2 rounded-xl text-white">Next</button>
                </form>
            </div>

    <!-- Bottom white section -->
    <div class="bg-white dark:bg-[#181c44] p-8">
    </div>
    </div>
    </section>
      <Footer />
                      </div>
                  </main>
              </div>
          </div>
          <div class="md:hidden overflow-x-hidden h-screen w-screen">
            <div class="antialiased">
                <main class="h-full">
                  <div class="absolute h-12 w-full z-50 bg-[#6473e1] dark:bg-[#10143c] grid grid-cols-2">
                      <img class="mt-2" src="https://docs.klovit.tech/img/Klovit%20Logo.png" height="30px" width="40px" alt="icon"></img>
                      <div class="grid place-items-end"><button aria-label="theme-switcher" id="theme-togglea" type="button" class="mr-4 text-white rounded-lg text-sm p-2.5">
                        <svg id="theme-toggle-dark-icona" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                          <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                        </svg>
                        <svg id="theme-toggle-light-icona" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                          <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
                        </svg>
                      </button></div>
                    </div>
                       <script is:inline>
                        // On page load or when changing themes, best to add inline in `head` to avoid FOUC
                        if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                            document.documentElement.classList.add('dark');
                        } else {
                            document.documentElement.classList.remove('dark')
                        }
                        var themeToggleDarkIcona = document.getElementById('theme-toggle-dark-icona');
                      var themeToggleLightIcona = document.getElementById('theme-toggle-light-icona');
                      
                      // Change the icons inside the button based on previous settings
                      if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                          themeToggleLightIcona.classList.remove('hidden');
                      } else {
                          themeToggleDarkIcona.classList.remove('hidden');
                      }
                      
                      var themeToggleBtna = document.getElementById('theme-togglea');
                      
                      themeToggleBtna.addEventListener('click', function() {
                      
                          // toggle icons inside button
                          themeToggleDarkIcona.classList.toggle('hidden');
                          themeToggleLightIcona.classList.toggle('hidden');
                      
                          // if set via local storage previously
                          if (localStorage.getItem('color-theme')) {
                              if (localStorage.getItem('color-theme') === 'light') {
                                  document.documentElement.classList.add('dark');
                                  localStorage.setItem('color-theme', 'dark');
                              } else {
                                  document.documentElement.classList.remove('dark');
                                  localStorage.setItem('color-theme', 'light');
                              }
                      
                          // if NOT set via local storage previously
                          } else {
                              if (document.documentElement.classList.contains('dark')) {
                                  document.documentElement.classList.remove('dark');
                                  localStorage.setItem('color-theme', 'light');
                              } else {
                                  document.documentElement.classList.add('dark');
                                  localStorage.setItem('color-theme', 'dark');
                              }
                          }
                          
                      });
                       </script>
                       <script is:inline>
                          // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes
                          if (
                            localStorage.getItem('color-theme') === 'dark' ||
                            (!('color-theme' in localStorage) &&
                              window.matchMedia('(prefers-color-scheme: dark)').matches)
                          ) {
                            document.documentElement.classList.add('dark');
                          } else {
                            document.documentElement.classList.remove('dark');
                          }
                        </script>
                                            {error &&
                                              <div class="flex justify-center">
                                              <div class="absolute mt-14 bg-[#6473e1] dark:bg-[#10143c] w-fit z-10">
                                                  <div class="p-4 rounded-xl bg-red-700 text-white self-center mr-6 ml-4">
                                                      ERROR: {error}
                                                  </div>
                                              </div>
                                              </div>}    
<section class="min-h-screen">
  <!-- Container for top colored section -->
  <div class="grid min-h-screen min-w-screen grid-cols-1 grid-rows-2">
      <!-- Top colored section -->
      <div class="bg-[#6473e1] dark:bg-[#10143c] p-8">
      </div>

      <!-- Centered box that overlaps the top section -->
      <div class="absolute bg-white min-w-fit dark:bg-[#181c44] overflow-y-scroll shadow-lg p-8 mt-4 self-center rounded-xl z-10">
        <form class="grid grid-cols-1" action="/api/installer/currency" method="POST">
                <input type="hidden" value={inputstarttoken} name="inputtoken"> 
                <h1 class="text-black text-center dark:text-white text-2xl font-bold">Step 2 - Package and Payment Settings</h2>
                <h1 class="text-black text-center dark:text-white text-xl font-bold">Default Package</h2>

                <input hidden type="text" name="token" class="text-white placeholder-gray-300 rounded-xl p-2 bg-[#6473e1] dark:bg-[#10143c]" required value={inputstarttoken}>
                <button type="submit" class="mt-2 bg-[#6473e1] dark:bg-[#10143c] p-2 rounded-xl text-white">Next</button>
                </form>
          </div>

  <!-- Bottom white section -->
  <div class="bg-white dark:bg-[#181c44] p-8">
  </div>
  </div>
  </section>
                          <Footer />
                      </div>
                  </main>
              </div>
          </div>
      </body>
      
      </html>