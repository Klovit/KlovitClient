---
import chalk from 'chalk';
import config from '../../config';
import { supabase } from "../../lib/supabase";
import db from '../../database';
import Adminnav from "../../components/adminnav.astro";
import Adminmobnav from "../../components/adminmobnav.astro";
import restype from "../../restype"
import Header from "../../components/head.astro"

const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");
if (!accessToken || !refreshToken) {
  return redirect("/signin");
}
const { data, error } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});
if (error) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/signin");
}
let cputype;
if (config.resource_type === "GB") {
    cputype = "Core(s)";
} else {
    cputype = "%";
}
const resconf = restype.restype
const errorstate = Astro.url.searchParams.get('error')! || '';
const errormsg = Astro.url.searchParams.get('error')! || '';
const success = Astro.url.searchParams.get('success')! || '';
const newpass = Astro.url.searchParams.get('password')! || ''
let newpassword;
if (Astro.url.searchParams.get("password")){ newpassword = "Password is " + newpass };

const {
  data: { user },
} = await supabase.auth.getUser()
const metadata = user.user_metadata
const username = metadata.full_name
const email = data?.user?.email
const avatar = metadata.avatar_url

let accountlistjson = await fetch(
    config.pterodactyl.url + "/api/application/users?include=servers&filter[email]=" + encodeURIComponent(email),
    {
        method: "get",
        headers: {
            'Content-Type': 'application/json',
            "Authorization": `Bearer ${config.pterodactyl.api}`
        }
    });
              let accountlist = await accountlistjson.json();
              let userdata = accountlist.data.filter(acc => acc.attributes.email == email);

let cacheaccount = await fetch(config.pterodactyl.url + "/api/application/users/" + userdata[0].attributes.id + "?include=servers",
 {
  method: "get",
  headers: { 'Content-Type': 'application/json', "Authorization": `Bearer ${config.pterodactyl.api}` }
 });
if (await cacheaccount.statusText == "Not Found") {
  if (error) {
    console.log(chalk.red(`[KlovitClient] An error has occured on path ${Astro.url.pathname}:`));
  };};
let cacheaccountinfo = JSON.parse(await cacheaccount.text());
    
const pterodactyl = cacheaccountinfo.attributes;
const adminstatus = pterodactyl.root_admin
if (adminstatus === false) {
 Astro.redirect("/dashboard")
}
const vercdnraw = await fetch("https://klovit.com/kcv.json")
const vercdn = await vercdnraw.json()
const currentver = config.version
const latestver = vercdn.version
let outdated;
if (currentver < latestver) {
    outdated = true
}
if (currentver === latestver) {
        outdated = false
}
---
<!DOCTYPE html>
<html>
    <Header />
      <style> 
        @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
        body { font-family: 'Roboto', system-ui, sans-serif; }
         body {
            overflow-y: scroll;
            overflow-x: hidden;
         }
         @tailwind base;
       @tailwind components;
       @tailwind utilities;

       </style> 

<script>
   // On page load or when changing themes, best to add inline in `head` to avoid FOUC
   if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
   } else {
      document.documentElement.classList.remove('dark')
   }
   var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
   var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
                   
    // Change the icons inside the button based on previous settings
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      themeToggleLightIcon.classList.remove('hidden');
    } else {
      themeToggleDarkIcon.classList.remove('hidden');
    }
            
    var themeToggleBtn = document.getElementById('theme-toggle');

    themeToggleBtn.addEventListener('click', function() {

      // toggle icons inside button
      themeToggleDarkIcon.classList.toggle('hidden');
      themeToggleLightIcon.classList.toggle('hidden');

      // if set via local storage previously
      if (localStorage.getItem('color-theme')) {
          if (localStorage.getItem('color-theme') === 'light') {
              document.documentElement.classList.add('dark');
              localStorage.setItem('color-theme', 'dark');
          } else {
              document.documentElement.classList.remove('dark');
              localStorage.setItem('color-theme', 'light');
          }

      // if NOT set via local storage previously
      } else {
          if (document.documentElement.classList.contains('dark')) {
              document.documentElement.classList.remove('dark');
              localStorage.setItem('color-theme', 'light');
          } else {
             document.documentElement.classList.add('dark');
              localStorage.setItem('color-theme', 'dark');
          }
      }
    
    });
    // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes
        if (
      localStorage.getItem('color-theme') === 'dark' ||
      (!('color-theme' in localStorage) &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
</script>
<body class="ml-1 min-w-screen bg-gradient-to-r from-teal-300 via-blue-400 to-purple-300 dark:bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] dark:from-zinc-700 dark:via-zinc-900 dark:to-black h-full min-h-screen relative">
    <div class="hidden md:block animation-blob h-screen w-screen">
        <div class="antialiased">
            <main>
                    <Adminnav />
                    {errorstate && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-2 bg-red-700 alert mr-3 ml-3 mt-8">ERROR: {errormsg}</div>}
                    {success && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-1 bg-green-700 alert mr-3 ml-3 mt-8">Success: {success}</div>}
                  <br><br>
<section class="ml-2">
    <h1 class="dark:text-white text-black text-[25px] lg:text-2xl">Admin | Resources</h1>
    <h1 class="dark:text-white text-black text-[20px]">This is only for extra resources</h1>
    <h1 class="dark:text-white text-black text-xl">&nbsp;Add Resources</h1>
    <div class="rounded-xl bg-gradient-to-r from-teal-300 via-blue-400 to-purple-300 dark:bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] dark:from-zinc-700 dark:via-zinc-900 dark:to-black px-2.5 py-2">
        <form class="p-4" method="POST" action="/api/admin/addres">
                    <div class="h-max shadow shadow-black p-4 rounded-xl">
                        <div class="w-full">
                            <h1 class="dark:text-white text-black ml-1">Email: </h1>
                            <input class="bg-transparent border w-80 h-6 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="email" placeholder="Eg. support@example.com" maxlength={50}></input>
                        </div>
                        <div class="w-fit ">
                            <h1 class="dark:text-white text-black ml-1">RAM: </h1>
                            <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="ram" placeholder="Amount of RAM in " maxlength={30}><span class="text-black ml-1 dark:text-white">{resconf}</span>
                        </input>
                        </div>
                        <div class="w-fit ">
                            <h1 class="dark:text-white text-black ml-1">Disk: </h1>
                            <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="disk" placeholder="Amount of Disk in" maxlength={30}></input><span class="text-black ml-1 dark:text-white">{resconf}</span>
                        </div>
                        <div class="w-fit ">
                            <h1 class="dark:text-white text-black ml-1">CPU: </h1>
                            <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="cpu" placeholder="Amount of CPU in" maxlength={30}></input><span class="text-black ml-1 dark:text-white">{cputype}</span>
                        </div>
                        <div class="w-fit ">
                            <h1 class="dark:text-white text-black ml-1">Slots: </h1>
                            <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="slots" placeholder="Amount of slots" maxlength={30}></input><span class="text-black ml-1 dark:text-white">Slots</span>
                        </div>
                        <button class="m-2 shadow shadow-black w-full rounded-lg text-black dark:text-white bg-gradient-to-r from-teal-300 via-blue-400 to-purple-300 dark:bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] dark:from-zinc-700 dark:via-zinc-900 dark:to-black 
                        " type="submit">Add Resources</button>
                       </div>
        </form>
    </div><br>
    <h1 class="dark:text-white text-black text-xl">&nbsp;Remove Resources</h1>
    <div class="rounded-xl shadow shadow-black px-2.5 py-2">
        <form method="POST" action="/api/admin/removeres">
          <div class="h-max p-4 rounded-xl">
            <div class="w-full">
                <h1 class="dark:text-white text-black ml-1">Email: </h1>
                <input class="bg-transparent border w-80 h-6 text-black dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="email" placeholder="Eg. support@example.com" maxlength={50}></input>
            </div>
            <div class="w-fit ">
                <h1 class="dark:text-white text-black ml-1">RAM: </h1>
                <input class="bg-transparent border w-40 text-black dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="ram" placeholder="Amount of RAM in " maxlength={30}><span class="text-black ml-1 dark:text-white">{resconf}</span>
            </input>
            </div>
            <div class="w-fit ">
                <h1 class="dark:text-white text-black ml-1">Disk: </h1>
                <input class="bg-transparent border w-40 text-black dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="disk" placeholder="Amount of Disk in" maxlength={30}></input><span class="text-black ml-1 dark:text-white">{resconf}</span>
            </div>
            <div class="w-fit ">
                <h1 class="dark:text-white text-black ml-1">CPU: </h1>
                <input class="bg-transparent border w-40 text-black dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="cpu" placeholder="Amount of CPU in" maxlength={30}></input><span class="text-black ml-1 dark:text-white">{cputype}</span>
            </div>
            <div class="w-fit ">
                <h1 class="dark:text-white text-black ml-1">Slots: </h1>
                <input class="bg-transparent border w-40 text-black dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="slots" placeholder="Amount of slots" maxlength={30}></input><span class="text-black ml-1 dark:text-white">Slots</span>
            </div>
           </div>
           <button class="m-2 shadow shadow-black w-full rounded-lg text-black dark:text-white bg-gradient-to-r from-teal-300 via-blue-400 to-purple-300 dark:bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] dark:from-zinc-700 dark:via-zinc-900 dark:to-black 
" type="submit">Remove Resources</button>
          </form>
    </div><br>
</section>

                </div>
            </main>
        </div>
    </div>
    <div class="md:hidden w-screen overflow-x-hidden animation-blob h-screen">
        <div class="antialiased">
            <main>
<Adminmobnav />
                    {errorstate && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-2 bg-red-700 alert mr-3 ml-3 mt-8">ERROR: {errormsg}</div>}
                    {success && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-1 bg-green-700 alert mr-3 ml-3 mt-8">Success: {success}</div>}
<br><br>
<section>
  <h1 class="dark:text-white text-black text-[15px] lg:text-2xl">Admin | Resources</h1>
  <h1 class="dark:text-white text-black text-[10px]">This is only for extra resources</h1>
  <h1 class="dark:text-white text-black text-xl">&nbsp;Add Resources</h1>
  <div class="rounded-xl bg-gradient-to-r from-teal-300 via-blue-400 to-purple-300 dark:bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] dark:from-zinc-700 dark:via-zinc-900 dark:to-black px-2.5 py-2">
      <form class="p-4" method="POST" action="/api/admin/addres">
                  <div class="shadow shadow-black h-max p-4 rounded-l-xl">
                      <div class="w-full">
                          <h1 class="dark:text-white text-black ml-1">Email: </h1>
                          <input class="bg-transparent text-black dark:text-white border w-80 h-6 duration-300 border-zinc-800 rounded-xl" type="text" name="email" placeholder="Email of the user eg. support@example.com" maxlength={50}></input>
                      </div>
                      <div class="w-fit ">
                          <h1 class="dark:text-white text-black ml-1">RAM: </h1>
                          <input class="bg-transparent text-black dark:text-white border w-40 duration-300 border-zinc-800 rounded-xl" type="text" name="ram" placeholder="Amount of RAM in " maxlength={30}><span class="text-black dark:text-white">{resconf}</span>
                      </input>
                      </div>
                      <div class="w-fit ">
                          <h1 class="dark:text-white text-black ml-1">Disk: </h1>
                          <input class="bg-transparent text-black dark:text-white border w-40 duration-300 border-zinc-800 rounded-xl" type="text" name="disk" placeholder="Amount of Disk in" maxlength={30}></input><span class="text-black dark:text-white">{resconf}</span>
                      </div>
                      <div class="w-fit ">
                          <h1 class="dark:text-white text-black ml-1">CPU: </h1>
                          <input class="bg-transparent text-black dark:text-white border w-40 duration-300 border-zinc-800 rounded-xl" type="text" name="cpu" placeholder="Amount of CPU in" maxlength={30}></input><span class="text-black dark:text-white">{cputype}</span>
                      </div>
                      <div class="w-fit ">
                          <h1 class="dark:text-white text-black ml-1">Slots: </h1>
                          <input class="bg-transparent text-black dark:text-white border w-40duration-300 border-zinc-800 rounded-xl" type="text" name="slots" placeholder="Amount of slots" maxlength={30}></input>
                      </div>
                      <button class="dark:text-white text-black w-full relative bg-blue-400 shadow-md font-medium rounded-full text-lg p-2 text-center" type="submit">Add Resources</button>
                     </div>
      </form>
  </div><br>
  <h1 class="dark:text-white text-black text-xl">&nbsp;Remove Resources</h1>
  <div class="rounded-xl bg-gradient-to-r from-teal-300 via-blue-400 to-purple-300 dark:bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] dark:from-zinc-700 dark:via-zinc-900 dark:to-black px-2.5 py-2">
      <form method="POST" action="/api/admin/removeres">
        <div class="shadow shadow-black h-max p-4 rounded-l-xl">
          <div class="w-full">
              <h1 class="text-black dark:text-white ml-1">Email: </h1>
              <input class="bg-transparent border w-80 h-6 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="email" placeholder="Email of the user eg. support@example.com" maxlength={50}></input>
          </div>
          <div class="w-fit ">
              <h1 class="text-black dark:text-white ml-1">RAM: </h1>
              <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="ram" placeholder="Amount of RAM in " maxlength={30}><span class="text-black dark:text-white">{resconf}</span>
          </input>
          </div>
          <div class="w-fit ">
              <h1 class="text-black dark:text-white ml-1">Disk: </h1>
              <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="disk" placeholder="Amount of Disk in" maxlength={30}></input><span class="text-black dark:text-white">{resconf}</span>
          </div>
          <div class="w-fit ">
              <h1 class="text-black dark:text-white ml-1">CPU: </h1>
              <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="cpu" placeholder="Amount of CPU in" maxlength={30}></input><span class="text-black dark:text-white">{cputype}</span>
          </div>
          <div class="w-fit ">
              <h1 class="text-black dark:text-white ml-1">Slots: </h1>
              <input class="bg-transparent border w-40 dark:text-white duration-300 border-zinc-800 rounded-xl" type="text" name="slots" placeholder="Amount of slots" maxlength={30}></input>
          </div>
          <button class="shadow shadow-black dark:text-white w-full relative bg-blue-400 text-black font-medium rounded-full text-lg p-2 text-center" type="submit">Remove Resources</button>
         </div>
        </form>
  </div><br>
</section>
                </div>
            </main>
        </div>
    </div>
</body>

</html>