---
import chalk from 'chalk';
import config from '../config';
import { getImage } from 'astro:assets';
import { supabase } from "../lib/supabase";
import db from '../database';
import Nav from "../components/nav.astro";
import restype from "../restype"
import Header from "../components/head.astro"
import Resources from '../components/resources.astro';
import Servers from '../components/servers.astro'
import Mobnav from "../components/mobnav.astro";
const { cookies, redirect } = Astro;

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");
if (!accessToken || !refreshToken) {
  return redirect("/signin");
}
const refresh_token = refreshToken.value
const access_token = accessToken.value
const { data, error } = await supabase.auth.setSession({
  refresh_token: refresh_token,
  access_token: access_token,
});

if (error) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/signin");
}


const icon = await getImage({src: `${config.website.icon}`,height: '50', width: '50', format: 'png'})
const errorstate = Astro.url.searchParams.get('error')! || '';
const errormsg = Astro.url.searchParams.get('error')! || '';
const success = Astro.url.searchParams.get('success')! || '';
const successmsg = Astro.url.searchParams.get('success')! || '';

const {
  data: { user },
} = await supabase.auth.getUser()

const metadata = user.user_metadata
const username = metadata.full_name
const email = data?.user?.email
const avatar = metadata.avatar_url

let accountlistjson = await fetch(
    config.pterodactyl.url + "/api/application/users?include=servers&filter[email]=" + encodeURIComponent(email),
    {
        method: "get",
        headers: {
            'Content-Type': 'application/json',
            "Authorization": `Bearer ${config.pterodactyl.api}`
        }
    }
);
              let accountlist = await accountlistjson.json();
              let userdata = accountlist.data.filter(acc => acc.attributes.email == email);
let cacheaccount = await fetch(
config.pterodactyl.url + "/api/application/users/" + userdata[0].attributes.id + "?include=servers",
 {
    method: "get",
    headers: { 'Content-Type': 'application/json', "Authorization": `Bearer ${config.pterodactyl.api}` }
  }
);
if (await cacheaccount.statusText == "Not Found") {
  if (error) {
    console.log(chalk.red(`[KlovitClient] An error has occured on path ${Astro.url.pathname}:`));
  };
};
let cacheaccountinfo = JSON.parse(await cacheaccount.text());
    
const pterodactyl = cacheaccountinfo.attributes;
const adminstatus = pterodactyl.root_admin
const servers = pterodactyl.relationships.servers.data[0]

const year = new Date().getFullYear().toString()
const yearWithTitle = `${year} ${config.name}`

const serversused = pterodactyl.relationships.servers.data.length
let srvs = pterodactyl.relationships.servers.data
const resconf = restype.restype
let cputype;
if (config.resource_type === "GB") {
 cputype = " Core(s)"
} else {
 cputype = "%"
}
if (config.gifting.enabled === false) {
   return Astro.redirect(`/dashboard?error=Gifting is Disabled.`)
}
---
<!DOCTYPE html>
<html>
    <Header />
    <style> 
        @import url('https://fonts.googleapis.com/css2?family=Fredoka:wght@300;400;500&display=swap');
        body { font-family: 'Fredoka', system-ui, sans-serif; }
         body {
            overflow-y: scroll;
            overflow-x: hidden;
         }
         @tailwind base;
       @tailwind components;
       @tailwind utilities;
       :is(.dark main) {
           background-color: #18181b;
       background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='105' viewBox='0 0 80 105'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='death-star' fill='%2309090b' fill-opacity='0.44'%3E%3Cpath d='M20 10a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V10zm15 35a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zM20 75a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V75zm30-65a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V10zm0 65a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V75zM35 10a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10zM5 45a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zm0-35a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10zm60 35a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zm0-35a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
       background-size: 100%;
       }
       main {
           background-color: #ffffff;
       background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='105' viewBox='0 0 80 105'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='death-star' fill='%239ca3af' fill-opacity='0.4'%3E%3Cpath d='M20 10a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V10zm15 35a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zM20 75a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V75zm30-65a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V10zm0 65a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V75zM35 10a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10zM5 45a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zm0-35a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10zm60 35a5 5 0 0 1 10 0v50a5 5 0 0 1-10 0V45zm0-35a5 5 0 0 1 10 0v20a5 5 0 0 1-10 0V10z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
       background-size: 100%;
       }
       </style> 
<body class="flex items-center justify-center h-full">
    <div class="hidden md:block animation-blob w-screen">
        <div class="antialiased">
            <main class="h-full">
                    <Nav />
                    {errorstate && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-2 bg-red-700 alert mr-3 ml-3 mt-1">ERROR: {errormsg}</div>}
                    {success && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-1 bg-green-700 alert mr-3 ml-3 mt-1">Success: {success}</div>}
<Resources />
<section class="p-8 rounded-xl">
  <div class="rounded-xl grid grid-cols-2 bg-zinc-300 dark:bg-zinc-900/50 dark:bg-zinc-900/50">
    <div class="p-2">
        <form method="POST" action="/api/user/gift">
          <h1 class="dark:text-white text-black">Email of the receiver:</h1>
          <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="receiver" placeholder="Eg. example@example.com"></input>
          <h1 class="dark:text-white text-black">RAM:</h1>
          <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftram" placeholder="RAM"></input><span class="text-black ml-1 dark:text-white">{resconf}</span>
          <h1 class="dark:text-white text-black">Disk:</h1>
          <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftdisk" placeholder="Disk"></input><span class="text-black ml-1 dark:text-white">{resconf}</span>
          <h1 class="dark:text-white text-black">CPU:</h1>
          <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftcpu" placeholder="CPU"></input><span class="text-black ml-1 dark:text-white">{cputype}</span>
          <h1 class="dark:text-white text-black">Slots:</h1>
          <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftslots" placeholder="Slots"></input><span class="text-black ml-1 dark:text-white">Slots</span>
          <h1 class="dark:text-white text-black">Coins:</h1>
          <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftcoins" placeholder="Coins"></input>
          <button class="m-2 w-full rounded-lg text-black dark:text-white bg-gradient-to-b from-gray-400 to-white dark:from-zinc-950 dark:to-zinc-900" type="submit">Gift</button>
        </form>
    </div>
  </div>
  
  </section>
                  <div class="text-center">
                    <p class="text-gray-400">
                        &copy;
                        {year} {config.name} | Powered by <a
                        class="text-amber-500"
                        href="https://github.com/Klovit/KlovitClient">KlovitClient</a>
                </p>
                 </div>
            </main>
        </div>
    </div>
    <div class="md:hidden w-screen overflow-x-hidden animation-blob h-screen">
        <div class="antialiased">
            <main class="h-screen">
<Mobnav />
                    {errorstate && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-2 bg-red-700 alert mr-3 ml-3 mt-1">ERROR: {errormsg}</div>}
                    {success && <div style="border-radius: 15px; color: white; height: 50px; text-align: center; font-size: large;" style="border-radius: 15px;" class="rounded-xl mb-1 bg-green-700 alert mr-3 ml-3 mt-1">Success: {success}</div>}
<Resources /><br><br>
<section>
  <div class="rounded-xl grid grid-cols-2 bg-zinc-300 dark:bg-zinc-900/50">
    <div class="p-2">
        <form method="POST" action="/api/user/gift">
            <h1 class="dark:text-white text-black">Email of the receiver:</h1>
            <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="receiver" placeholder="Eg. example@example.com"></input>
            <h1 class="dark:text-white text-black">RAM:</h1>
            <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftram" placeholder="RAM"></input><span class="text-black ml-1 dark:text-white">{resconf}</span>
            <h1 class="dark:text-white text-black">Disk:</h1>
            <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftdisk" placeholder="Disk"></input><span class="text-black ml-1 dark:text-white">{resconf}</span>
            <h1 class="dark:text-white text-black">CPU:</h1>
            <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftcpu" placeholder="CPU"></input><span class="text-black ml-1 dark:text-white">{cputype}</span>
            <h1 class="dark:text-white text-black">Slots:</h1>
            <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftslots" placeholder="Slots"></input><span class="text-black ml-1 dark:text-white">Slots</span>
            <h1 class="dark:text-white text-black">Coins:</h1>
            <input class="bg-zinc-100 dark:bg-zinc-900/50 border mb-2 border-black w-full dark:text-gray-300 duration-300 p-2 rounded-xl" name="giftcoins" placeholder="Coins"></input>
            <button class="m-2 w-full rounded-lg text-black dark:text-white bg-gradient-to-b from-gray-400 to-white dark:from-zinc-950 dark:to-zinc-900" type="submit">Gift</button>
          </form>
  </div>
  </div>
</section>
                  <div class="text-center">
                    <p class="text-gray-400">
                        &copy;
                        {year} {config.name} | Powered by <a
                        class="text-amber-500"
                        href="https://github.com/Klovit/KlovitClient">KlovitClient</a>
                </p>

                 </div>
                </div>
            </main>
        </div>
    </div>
</body>

</html>